package com.creeperstone72.bartenders_companion_back.data_jpa.controller;

import com.creeperstone72.bartenders_companion_back.data_jpa.model.Cocktail;
import com.creeperstone72.bartenders_companion_back.data_jpa.service.CocktailService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.NoSuchElementException;

@RestController
public class CocktailController {
    ///////////////////////////////////////////////////////////////////////////////////////////////
    // Attributes /////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////
    @Autowired
    private CocktailService service;

    ///////////////////////////////////////////////////////////////////////////////////////////////
    // Methods ////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////
    //// Create methods //////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    @PostMapping("/cocktails")
    public void add(@RequestBody Cocktail cocktail) { service.save(cocktail); }

    //////////////////////////////////////////////////////////////////////
    //// Retrieve methods ////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    @GetMapping("/cocktails/{id}")
    public ResponseEntity<Cocktail> get(@PathVariable Integer id) {
        try {
            Cocktail cocktail = service.get(id);
            return new ResponseEntity<>(cocktail, HttpStatus.OK);
        } catch (NoSuchElementException e) { return new ResponseEntity<>(HttpStatus.NOT_FOUND); }
    }

    @GetMapping("/cocktails")
    public List<Cocktail> getAll() { return service.listAll(); }

    //////////////////////////////////////////////////////////////////////
    //// Update methods //////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    @PutMapping("/cocktails/{id}")
    public ResponseEntity<?> update(@RequestBody Cocktail cocktail, @PathVariable Integer id) {
        try {
            Cocktail existingCocktail = service.get(id);
            service.save(cocktail);
            return new ResponseEntity<>(HttpStatus.OK);
        } catch (NoSuchElementException e) { return new ResponseEntity<>(HttpStatus.NOT_FOUND); }
    }

    //////////////////////////////////////////////////////////////////////
    //// Delete methods //////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    @DeleteMapping("/cocktails/{id}")
    public void delete(@PathVariable Integer id) { service.delete(id); }
}
